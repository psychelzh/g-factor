---
title: Modeling Behavior
author: Liang Zhang
date: 2022-12-13
format: 
  revealjs: 
    code-fold: false
execute:
  warning: false
  message: false
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(lavaan)
```

# Data Inspection

## Sample Description

```{r}
#| label: describe-sample
targets::tar_load(subjs_info_clean)
targets::tar_load(indices_wider_clean)
subjs_descr <- subjs_info_clean |> 
  semi_join(indices_wider_clean, by = "sub_id") |> 
  report::report_participants()
```

The full sample contains `r subjs_descr`.

## Distribution

```{r}
#| label: fig-distr
#| fig-width: 8
#| fig-height: 6
#| fig-cap: >
#|   **Distributions for All Tasks.** They are all all fairly distributed as
#|   normal.

targets::tar_load(indices_clean)
indices_clean |>
  ggplot(aes(score)) +
  geom_histogram() +
  facet_wrap(~ disp_name + index, scales = "free")
```

## Missing Pattern

```{r}
#| label: fig-miss-pattern
#| fig-width: 8
#| fig-height: 6
#| fig-cap: >
#|   **Misssing pattern.** 

targets::tar_load(indices_wider_clean)
mdl_data <- select(indices_wider_clean, -sub_id)
mdl_data |>
  naniar::vis_miss() +
  theme(axis.text.x = element_text(angle = 90))
```

## Correlation Matrix

```{r}
#| label: fig-correlation
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "**Correlation Between Tasks**"

mdl_data |>
  corrr::correlate() |>
  corrr::autoplot(
    method = "HC",
    low = "green", 
    high = "red", 
    mid = "white"
  )
```

# CFA Modeling

## Simple One-g CFA

```{r}
#| label: fig-loading-one-factor
#| fig-height: 6
#| fig-width: 8
#| fig-cap: >
#|   **Factor loadings for one factor only.** Note the largest loadings are 
#|   mainly from response time tasks. The fit measures are also low.

mdl_one_g_spec <- paste(
  "g =~", 
  paste0("`", names(mdl_data), "`", collapse = " + ")
)
fitted_one_g <- cfa(mdl_one_g_spec, mdl_data, std.ov = TRUE, missing = "fiml")
df_print <- fitMeasures(fitted_one_g, c("cfi", "tli", "rmsea")) |> 
  as_tibble_row() |> 
  rename_with(toupper) |> 
  mutate(across(.fns = ~ round(., 2)))
standardizedSolution(fitted_one_g) |> 
  filter(lhs == "g", op == "=~") |> 
  select(variable = rhs, loading = est.std) |> 
  ggplot(aes(loading, fct_reorder(variable, loading))) +
  geom_point() +
  ggpp::geom_table_npc(
    data = tibble(x = 0.05, y = 0.95, tb = list(df_print)),
    mapping = aes(npcx = x, npcy = y, label = tb)
  ) +
  labs(x = "Loading", y = "Task Index") +
  theme_bw()
```

## Enhance Model Fitting

Given the previous model does not fit well, item deletion and model re-factor (hierarchical model) are tried. The deleted items are:

* All the inhibition tasks (anti-saccade, stop signal, stroop), because they do not fit well as an inhibition factor.
* Penn line orientation task is related to perception, which does not have enough similar tasks.
* Spatial 2-back task, because its correlation with other WM tasks is relatively low and its loading on WM factor is low.

## Better Model {.smaller}

```{r}
#| label: fig-better-model
#| fig-width: 8
#| fig-height: 5
#| fig-cap: >
#|   **Visualization of the new model.**

targets::tar_load(mdl_fitted)
semPlot::semPaths(
  mdl_fitted, 
  whatLabels = "std", 
  intercepts = FALSE, 
  nCharNodes = 0,
  edge.label.cex = 0.75
)
```

```{r}
#| label: tbl-fitmeasure-better-model
#| tbl-cap: >
#|   **Fit measures.**

fitMeasures(mdl_fitted, c("cfi", "tli", "rmsea")) |> 
  as_tibble_row() |> 
  rename_with(toupper) |> 
  mutate(across(.fns = ~ round(., 2))) |> 
  knitr::kable()
```

## Correlation between two G factor scores

```{r}
#| label: fig-cor-between-g
#| fig-height: 6
#| fig-width: 8
#| fig-cap: >
#|   **Correlation between G factor scores.** The correlation is very high, so
#|   the results can be similar.

tibble(
  score_g_one = lavPredict(fitted_one_g)[, "g"],
  score_g_better = lavPredict(mdl_fitted)[, "g"]
) |> 
  GGally::ggpairs()
```
